name: Update Surge Module on Upstream Change

on:
  # Runs daily at 1:00 PM Eastern Time (17:00 UTC for Eastern Daylight Time)
  schedule:
    - cron: '0 17 * * *'
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install requests

      - name: Generate Surge Module if Upstream Changed
        run: |
          python - <<'EOF'
          import os
          import hashlib
          import requests
          import datetime

          # URL of the raw upstream file
          url = "https://raw.githubusercontent.com/hagezi/dns-blocklists/main/adblock/pro.txt"
          response = requests.get(url)
          if response.status_code != 200:
              raise Exception(f"Failed to fetch file from {url}: {response.status_code}")
          data = response.text
          
          # Calculate the SHA-256 hash of the file content
          hash_current = hashlib.sha256(data.encode('utf-8')).hexdigest()

          # File to store the last known hash
          hash_file = "current_hash.txt"
          previous_hash = None
          if os.path.exists(hash_file):
              with open(hash_file, "r") as f:
                  previous_hash = f.read().strip()

          if previous_hash == hash_current:
              print("No changes detected in the upstream file. Exiting.")
              exit(0)
          else:
              print("Changes detected. Updating module...")
              with open(hash_file, "w") as f:
                  f.write(hash_current)

          # Ensure the output directory exists
          output_dir = "Surge/Modules"
          os.makedirs(output_dir, exist_ok=True)

          # Process the downloaded file to generate the Surge module content
          lines = data.splitlines()
          module_lines = [
              "# Surge Ad & Telemetry Blocking Module",
              "# Converted from: " + url,
              "# Last updated: " + datetime.datetime.utcnow().strftime("%Y-%m-%d"),
              "#",
              "# To use, import this module into your Surge configuration.",
              "",
              "[Rule]",
              "# --- Begin blocking rules ---"
          ]

          for line in lines:
              line = line.strip()
              # Skip empty lines and comments
              if not line or line.startswith("#"):
                  continue
              module_lines.append(f"DOMAIN-SUFFIX,{line},REJECT")

          module_content = "\n".join(module_lines)
          # Write the module file to the desired directory
          module_file_path = os.path.join(output_dir, "Ad-Telemetry-Block.surge")
          with open(module_file_path, "w") as f:
              f.write(module_content)
          print("Surge module updated successfully at", module_file_path)
          EOF

      - name: Commit Changes if Any
        uses: EndBug/add-and-commit@v9
        with:
          github_token: ${{ secrets.ADBLOCK }}
          message: "Updated Surge module based on upstream changes [skip ci]"
          add: "Surge/Modules/Ad-Telemetry-Block.surge current_hash.txt"
