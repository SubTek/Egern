name: Update Surge Module on Upstream Change

on:
  # Runs daily at 1:00 PM Eastern Time (17:00 UTC for Eastern Daylight Time)
  schedule:
    - cron: '0 17 * * *'
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install requests

      - name: Generate Surge Module
        run: |
          python - <<'EOF'
          import os
          import requests
          import datetime

          # URL of the raw upstream file
          url = "https://raw.githubusercontent.com/hagezi/dns-blocklists/main/adblock/pro.txt"
          response = requests.get(url)
          if response.status_code != 200:
              raise Exception(f"Failed to fetch file from {url}: {response.status_code}")
          data = response.text

          # Ensure the output directory exists
          output_dir = "Surge/Modules"
          os.makedirs(output_dir, exist_ok=True)

          # Process the downloaded file to generate the Surge module content
          lines = data.splitlines()
          module_lines = [
              "# Surge Ad & Telemetry Blocking Module",
              "# Converted from: " + url,
              "# Last updated: " + datetime.datetime.utcnow().strftime("%Y-%m-%d"),
              "#",
              "# To use, import this module into your Surge configuration.",
              "",
              "[Rule]",
              "# --- Begin blocking rules ---"
          ]

          for line in lines:
              line = line.strip()
              if not line or line.startswith("#"):
                  continue
              module_lines.append(f"DOMAIN-SUFFIX,{line},REJECT")

          module_content = "\n".join(module_lines)
          module_file_path = os.path.join(output_dir, "Ad-Telemetry-Block.surge")
          with open(module_file_path, "w") as f:
              f.write(module_content)
          print("Surge module updated successfully at", module_file_path)
          EOF

      - name: Commit and Push Changes if Any
        env:
          ADBLOCK: ${{ secrets.ADBLOCK }}
        run: |
          # Configure Git with the GitHub Actions bot identity.
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # Force Git to use the PAT for all GitHub URLs.
          git config --global url."https://x-access-token:${ADBLOCK}@github.com/".insteadOf "https://github.com/"

          # Stage the generated module file.
          git add Surge/Modules/Ad-Telemetry-Block.surge

          # Commit only if there are changes.
          git diff --cached --quiet || git commit -m "Updated Surge module based on upstream changes [skip ci]"

          # Push changes.
          git push origin HEAD:${GITHUB_REF#refs/heads/}
